@* Generator: Template TypeVisibility: Internal *@
@using System.Web
@using Elmah
@inherits RazorTemplateBase
@{
    // NB cast is not really required, but aids with intellisense!
    var error = (Error) this.Error;

    var about = PoweredBy.GetAbout(HttpRuntime.Cache, (version, fileVersion, product, copyright) => new
    {
        Version = version != null
                ? version.ToString()
                : fileVersion != null
                ? fileVersion.ToString()
                : "?.?.?.?",
        Product = Mask.EmptyString(product, "(product)"),
        Copyright = copyright,
    });
}
<html>
    <head>
        <title>Error: @error.Message</title>
        <style type="text/css">
            body { font-family: verdana, arial, helvetic; font-size: x-small; }
            td, th, pre { font-size: x-small; } 
        </style>
    </head>
    <body>
		<h1 style="font-size: medium; font-style: italic; color: maroon;">@error.Type: @error.Message</h1>

		@{
			var rawUrl = error.ServerVariables.Get("RAW_URL");
			if(string.IsNullOrEmpty(rawUrl))
			{
				rawUrl = "no-url";
			}

			var host = error.ServerVariables.Get("HTTP_HOST");
			if (string.IsNullOrEmpty(host))
			{
				host = "no-hostname";
			}

			var protocol = error.ServerVariables.Get("HTTPS");
			if (string.IsNullOrEmpty(protocol) || protocol == "off")
			{
				protocol = "http://";
			}
			else
			{
				protocol = "https://";
			}
		}
		
		<ul style="padding:0; margin: 0 0 1em 0; list-style-type: none">
			<li style="margin:0"><a href="@protocol@host@rawUrl">@protocol@host@rawUrl</a></li>
			@if (error.Time != DateTime.MinValue)
			{
				<li style="margin:0"><strong>@error.Time.ToLocalTime().ToString("h:mm:ss tt")</strong> @error.Time.ToLocalTime().ToString("M/d/yyyy") (server time)</li>
			}
			<li style="margin:0"><strong>@ErrorCount</strong> occurrences of this error recently</li>
		</ul>
		
        @if (error.Detail.Length != 0)
        {
@* NOTE! DO NOT REMOVE this comment
   Eliminates white space literal prior to pre tag in generated 
   code and is important for correct formatting
            *@<pre style="padding: 1em; background-color: #FFFFCC; font-family: Consolas, Courier, monospace;">@error.Detail</pre>
        }
		
		@{
			var ignoredVarPrefixes = new List<string>();
			ignoredVarPrefixes.Add("CERT_");
			ignoredVarPrefixes.Add("ALL_");
			ignoredVarPrefixes.Add("APPL_");
			ignoredVarPrefixes.Add("GATEWAY_INTERFACE");
			ignoredVarPrefixes.Add("HTTPS_");
			ignoredVarPrefixes.Add("INSTANCE_");
			ignoredVarPrefixes.Add("SERVER_SOFTWARE");
		}

		@foreach (var collection in 
            from collection in new[] 
            {
                new
                {
                    Id    = "ServerVariables",
                    Title = "Server Variables",
                    Items = error.ServerVariables,
                }
            }
            let data = collection.Items
            where data != null && data.Count > 0
            let items = from i in Enumerable.Range(0, data.Count)
                        select KeyValuePair.Create(data.GetKey(i), data[i])
            select new
            {
                collection.Id, 
                collection.Title,
                Items = items.OrderBy(e => e.Key, StringComparer.OrdinalIgnoreCase)
            }
        )
        {
            <div id="@collection.Id">
                <h2 style="font-size: medium; font-style: italic; color: gray;">@collection.Title</h2>
                <table style="border-collapse: collapse; border-spacing: 0; border: 1px solid black; width: 100%">
                    <tr><th style="text-align: left; border: 1px solid black; padding: 4px;">Name</th>            
                        <th style="text-align: left; border: 1px solid black; padding: 4px;">Value</th></tr>
                    @foreach (var item in collection.Items.Where(x=>!ignoredVarPrefixes.Any(y=>x.Key.StartsWith(y))))
                    {
	                    <tr style="vertical-align: top;">
							<td style="border: 1px solid black; padding: 4px;">@item.Key</td>
							<td style="border: 1px solid black; padding: 4px; font-family: Consolas, Courier, monospace;">@item.Value</td>
						</tr>
                    }
                </table>
            </div>
        }
    </body>
</html>
